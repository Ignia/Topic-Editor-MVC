@model TopicListAttributeViewModel

@{
  if (Model.TargetUrl == null) {
    Layout = "~/Views/Editor/Components/_Layout.cshtml";
  }
}

@if (Model.TopicList.Count > 2 || String.IsNullOrEmpty(Model.TargetUrl)) {

  <select
    asp-for                     ="Value"
    asp-items                   ="Model.TopicList"
    class                       ="@Model.AttributeDescriptor.CssClass form-control form-inline"
    disabled                    =@(!Model.AttributeDescriptor.IsEnabled)
    required                    =@Model.AttributeDescriptor.IsRequired
    >
  </select>

  @if (!String.IsNullOrEmpty(Model.TargetUrl)) {
    <script>
      (function ($) {
        $("#@Html.IdFor(m => m.Value)").change(function () {
          var option = $('option:selected', this);
          @if (Model.EnableModal?? false) {
            <text>
              initEditorModal('@Model.AttributeDescriptor.Key', option.text(), option.val(), @Model.OnModalClose); return false;
            </text>
          }
          else {
            <text>
              window.location.href = option.val();
            </text>
          }
        });
      })(jQuery);
    </script>
  }


}

else {
  <div class="ChildTopic">
    @if (Model.EnableModal == true) {
      <a onclick="initEditorModal('@Model.AttributeDescriptor.Key', '@Model.TopicList.LastOrDefault().Text', '@Model.TopicList.LastOrDefault().Value', @Model.OnModalClose); return false;" class="btn btn-info btn-sm">
        Add @Model.TopicList.LastOrDefault().Text
      </a>
    }
    else {
      <a href="@Model.TopicList.LastOrDefault().Value" class="btn btn-info btn-sm">
        Add @Model.TopicList.LastOrDefault().Text
      </a>
    }
  </div>
}