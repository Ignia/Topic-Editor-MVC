@model TokenizedTopicListAttributeViewModel

@{
  Layout = "~/Areas/Editor/Views/Editor/Components/_Layout.cshtml";

  var descriptor                = Model.AttributeDescriptor;
  var rootTopicKey              = descriptor.RootTopic?.UniqueKey.Replace(":", "/")?? descriptor.RootTopicKey?.Replace(":", "/") ?? "Root";

}

<div>
  <input
    asp-for                     ="Value"
    class                       ="FormField Field"
    disabled                    =@(!descriptor.IsEnabled)
    required                    =@descriptor.IsRequired
  />
</div>

<script>
  window.addEventListener('DOMContentLoaded', function () {
    (function($) {

      //Create new instance of TokenizedTopics and set relevant properties
      var topics                = new TokenizedTopics();
      topics.selector           = '#@Html.IdFor(m => m.Value)';
      topics.scope              = '@rootTopicKey';
      topics.attributeName      = '@descriptor.AttributeKey';
      topics.attributeValue     = '@descriptor.AttributeValue';
      topics.resultLimit        = '@descriptor.ResultLimit';
      topics.tokenLimit         = @descriptor.TokenLimit;
      topics.isAutoPostBack     = @((descriptor.AutoPostBack?? false).ToString().ToLower());
      topics.selectedTopics     = @Html.Raw(Model.SelectedTopics);

      //Fire TokenizedTopics.prototype.getTokenizedTopics() (and $([selector]).tokenInput())
      topics.getTokenizedTopics();

    })(jQuery);

  });

</script>