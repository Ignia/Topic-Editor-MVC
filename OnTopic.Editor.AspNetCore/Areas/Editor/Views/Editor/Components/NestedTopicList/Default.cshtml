@model NestedTopicListAttributeViewModel

@{
  Layout = "~/Areas/Editor/Views/Editor/Components/_Layout.cshtml";
}

<script type="text/javascript">
  var @($"{Model.AttributeDescriptor.Key}Tree");

  Ext.onReady(function(){
    var Tree            = Ext.tree;

  //track what nodes are moved
    var oldPosition     = null;
    var oldNextSibling  = null;
    var debugMessage    = "";

    @($"{Model.AttributeDescriptor.Key}Tree") = new Tree.TreePanel({
      useArrows                 : true,
      autoScroll                : true,
      animate                   : false,
      enableDD                  : true,
      containerScroll           : true,
      border                    : false,
      baseCls                   : 'treeview',
      dataUrl                   : '/OnTopic/Json/@Model.WebPath/@Model.AttributeDescriptor.Key?ShowAll=true',
      root                      : new Ext.tree.AsyncTreeNode({}),
      rootVisible               : false,
      listeners                 : {
        click: function (n) {
          var targetUrl = "@($"{Url.Action("Edit")}/{Model.AttributeDescriptor.Key}/")" + n.attributes.key;
          @if (Model.AttributeDescriptor.EnableModal?? true) {
            <text>
              initEditorModal('@Model.AttributeDescriptor.Key', n.attributes.text, targetUrl + '?IsModal=true', @($"{Model.AttributeDescriptor.Key}Tree_refresh"));return false;
            </text>
          }
          else {
            <text>
              location.href = targetUrl;
            </text>
          }
        },
        startdrag               : function(tree, node, event) {
          oldPosition           = node.parentNode.indexOf(node);
          oldNextSibling        = node.nextSibling;
        },
        nodedragover            : function(dragOverEvent) {
          return dragOverEvent.point !== "append";
        },
        movenode                : function(tree, node, oldParent, newParent, position) {

          var params            = {'node':node.id, 'delta':(position-oldPosition)};

        //Determine sibling ID to place node after, based off position
          var siblingId         = -1;
          if (position > 0) {
            siblingId           = newParent.childNodes[position-1].id;
          }

        //Ext.Msg.alert("Debugging", "Node: " + node.attributes.id + ", OldParent: " + oldParent.attributes.id + ", Parent: " + newParent.attributes.id + ", Sibling: " + siblingId);

          $.ajax({
            method: "POST",
            url: "/OnTopic/Move",
            data: { topicId: node.attributes.id, targetTopicId: -1, siblingId }
          })

        }
      }
    });

    @if (!Model.IsNew) {
      <text>
        @($"{Model.AttributeDescriptor.Key}Tree").render('@ViewData.TemplateInfo.GetFullHtmlFieldName("Container")');
      </text>
    }
  });

  function @($"{Model.AttributeDescriptor.Key}Tree")_refresh() {
    @($"{Model.AttributeDescriptor.Key}Tree").getLoader().load(@($"{Model.AttributeDescriptor.Key}Tree").root);
    };

  </script>

<div id="@ViewData.TemplateInfo.GetFullHtmlFieldName("Container")"></div>

@if (!Model.IsNew) {
  <text>
    <vc:content-type-list
      current-topic             =@Model.CurrentTopic
      attribute-descriptor      =@Model.AttributeDescriptor
      on-modal-close            =@($"{Model.AttributeDescriptor.Key}Tree_refresh")
      values                    =@Model.AttributeDescriptor.PermittedContentTypes>
    </vc:content-type-list>
  </text>
}
else {
  <div class="alert alert-warning">
    Subtopics cannot be created until this topic has been saved. Save the topic, then add nested topics.
  </div>
}

<div id="@($"EditorModal_{Model.AttributeDescriptor.Key}")" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-header page title">
      <h2 id="@($"ModalTitle_{Model.AttributeDescriptor.Key}")"><!-- determined by modal open script caller --></h2>
    </div>
    <div class="modal-content">
      <iframe id="@($"EditorFrame_{Model.AttributeDescriptor.Key}")" src="" width="100%" marginheight="0" frameborder="0">
        <!-- iframe source determined by modal open script caller -->
      </iframe>
    </div>
  </div>
</div>

<script>
  $(function() {
    $('[id^="EditorModal"]').on('hide.bs.modal', function (e) {
      @($"{Model.AttributeDescriptor.Key}Tree_refresh")();
    });
  });
</script>