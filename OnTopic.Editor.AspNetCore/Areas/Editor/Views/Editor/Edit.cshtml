@model OnTopic.Editor.AspNetCore.Models.EditorViewModel

@{
  ViewBag.Title = "Home Page";
  var bindingModel = new EditorBindingModel();
}

<form
  id                            ="EditorForm"
  method                        ="post"
  asp-controller                ="Editor"
  asp-action                    ="Edit"
  asp-route-IsNew               =@Model.IsNew
  asp-route-IsModal             =@Model.IsModal
  asp-route-ContentType         =@Model.ContentTypeDescriptor.Key
>

  <partial name="_Toolbar" />

  <div id="FormArea" class="row form area">

    <div class="col-md-12">
      @if (Model.ContentTypeDescriptor.DisableDelete && !Model.IsNew || Model.Topic.IsProtected) {
        <div class="alert alert-danger" role="alert">
          <strong>Warning:</strong> This topic is part of the OnTopic internal organizational structure and is not intended to be modified. Deletion of this Topic has been disabled.
        </div>
      }
      @if (Model.Topic.IsDisabled) {
        <div class="alert alert-danger" role="alert">
          <strong>Warning:</strong> This topic is currently disabled and will not be viewable via the website. This topic can be reenabled on the <i>Navigation</i> tab.
        </div>
      }
      @if (!Model.IsFullyLoaded) {
        <div class="alert alert-danger" role="alert">
          <strong>Warning:</strong> Not all relationships were successfully loaded from the database. To prevent inadvertent deletion of relationships, any relationships that are removed won't be persisted to the database. You can still add new relationships.
        </div>
      }
      @if (Model.Topic.IsHidden && Model.Topic.NoIndex) {
        <div class="alert alert-warning" role="alert">
          <strong>Note:</strong> This topic is currently hidden from both search engines and the site navigation. Customers can still access it by URL, including direct links.
        </div>
      }
      else if (Model.Topic.IsHidden) {
        <div class="alert alert-warning" role="alert">
          <strong>Note:</strong> This topic is currently hidden and will not be displayed in the site navigation. Customers can still access it, and it will still show up in search results.
        </div>
      }
      else if (Model.Topic.NoIndex) {
        <div class="alert alert-warning" role="alert">
          <strong>Note:</strong> This topic is currently hidden from search engines. Customers can still access it, but it won't show up in search results.
        </div>
      }
      @if (!String.IsNullOrWhiteSpace(Model.ContentTypeDescriptor.Description)) {
        <div class="alert alert-primary" role="alert">
          @Model.ContentTypeDescriptor.Description
        </div>
      }
      @if (Model.Topic.BaseTopic is not null) {
        <div class="alert alert-primary" role="alert">
          <strong>Note:</strong> This topic derives from <a href="@Url.Action("Edit", new { path = Model.Topic.BaseTopic.WebPath, isModal = Model.IsModal })">@Model.Topic.BaseTopic.Title</a>. Any values not explicitly defined here will be inherited from that topic.
        </div>
      }
      @if (!ViewData.ModelState.IsValid) {
        <div asp-validation-summary="All" class="alert alert-danger" role="alert"></div>
      }
    </div>

    <div class="@(Model.IsModal? "col-sm-10" : "col-lg-9 col-sm-12")">
      @{int index = 0;}
      <div id="DisplayGroupTabsContent" class="tab-content tab-validate">
        @foreach (string displayGroupName in Model.ContentTypeDescriptor.GetDisplayGroups()) {

          var displayGroupId = displayGroupName.Replace(" ", String.Empty);

          <div id="Group_@displayGroupId" class="tab-pane fade@(index is 0 ? " show active" : "")" role="tabpanel" aria-labelledby="Tab_@displayGroupId">
            <section id="Section_@displayGroupId">

              @foreach (var attribute in Model.ContentTypeDescriptor.GetAttributeDescriptors(displayGroupName)) {
                @await Component.InvokeAsync(
                  attribute.EditorType.Replace("AttributeDescriptor", ""),
                  new { CurrentTopic=Model.Topic, Attribute=attribute, HtmlFieldPrefix=$"Attributes[{index++}]" }
                )
              }

            </section>
          </div>

        }
      </div>

    </div>

    @if (!Model.IsModal) {
      <div class="col-lg-3 callouts d-none d-lg-block">
        <div class="callout topic-info">

          <h3 class="h5">Topic Information</h3>
          <dl>
            <dt><i class="fa fa-cogs"></i> Content Type</dt>
            <dd><a href="/OnTopic/Edit/@Model.ContentTypeDescriptor.WebPath">@Model.Topic.ContentType</a></dd>
            <dt><i class="fa fa-database"></i> Topic ID</dt>
            <dd><a href="/Topic/@Model.Topic.Id/">@Model.Topic.Id</a></dd>
            <dt><i class="fa fa-eye"></i> Current</dt>
            <dd><a href="@Model.Topic.WebPath" rel="noopener" target="_blank">View Page</a></dd>
          </dl>

        </div>
      </div>
    }

  </div>

</form>

@section InlineScript {

  /**
  * Trigger jQuery validation
  */
  $('#EditorForm').validate({
    ignore: [],
    invalidHandler: function () {
      setTimeout(function () {
        $('.nav-tabs button small.required').remove();
        $('.nav-tabs button.error').removeClass("error");
        $('.tab-content.tab-validate .tab-pane:has(input.error, textarea.error, select.error)').each(function () {
          var id = $(this).attr('id');
          $('.nav-tabs').find('button[data-bs-target^="#' + id + '"]').addClass("error").append(' <small class="required">*</small>');
        });
      });
    }
  });

  @if (Model.Topic.BaseTopic is not null) {
    <text>
      /**
      * Disable required fields if derived topic, as missing values will be inherited
      */
      $('section input, section textarea, section select')
        .not("section.Key input")
        .removeAttr('required')
        .rules('remove', 'required');
    </text>
  }

}