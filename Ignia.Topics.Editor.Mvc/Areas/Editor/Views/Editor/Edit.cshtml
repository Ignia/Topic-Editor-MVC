@model Ignia.Topics.Editor.Models.EditorViewModel

@{
  ViewBag.Title = "Home Page";
  var bindingModel = new EditorBindingModel();
}

<form
  id                            ="EditorForm"
  method                        ="post"
  asp-controller                ="Editor"
  asp-action                    ="Edit"
  asp-route-IsNew               =@Model.IsNew
  asp-route-IsModal             =@Model.IsModal
  asp-route-ContentType         =@Model.ContentTypeDescriptor.Key
>

  <partial name="_Toolbar" />

  <div id="FormArea" class="row form area">

    <div class="col-md-12">
      @if (Model.ContentTypeDescriptor.DisableDelete) {
        <div class="alert alert-warning" role="alert">
          <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
          <strong>Warning:</strong> This topic is part of the OnTopic internal organizational structure and is not intended to be modified. Deletion of this Topic has been disabled.
        </div>
      }
      else if (!String.IsNullOrWhiteSpace(Model.ContentTypeDescriptor.Description)) {
        <div class="alert alert-light" role="alert">
          @Model.ContentTypeDescriptor.Description
        </div>
      }
      <div asp-validation-summary="All"></div>
    </div>

    <div class="col-md-9">
      @{int index = 0;}
      <div id="DisplayGroupTabsContent" class="tab-content tab-validate">
        @foreach (string displayGroupName in Model.ContentTypeDescriptor.GetDisplayGroups()) {

          var displayGroupId = displayGroupName.Replace(" ", String.Empty);

          <div id="Group_@displayGroupId" class="tab-pane fade@(index == 0 ? " show active" : "")" role="tabpanel" aria-labelledby="Tab_@displayGroupId">
            <section id="Section_@displayGroupId">

              @foreach (var attribute in Model.ContentTypeDescriptor.GetAttributeDescriptors(displayGroupName)) {
                @await Component.InvokeAsync(
                  attribute.ContentType.Replace("Attribute", ""),
                  new { CurrentTopic=Model.Topic, Attribute=attribute, HtmlFieldPrefix=$"Attributes[{index++}]" }
                )
              }

            </section>
          </div>

        }
      </div>

    </div>

    @if (!Model.IsModal) {
      <div class="col-md-3 callouts">
        <div class="callout topic-info">

          <h3 class="h5">Topic Information</h3>
          <dl>
            <dt><i class="fa fa-cogs"></i> Content Type</dt>
            <dd><a href="/Configuration/ContentTypes/@Model.Topic.ContentType">@Model.Topic.ContentType</a></dd>
            <dt><i class="fa fa-database"></i> Topic ID</dt>
            <dd><a href="/Topic/@Model.Topic.Id/">@Model.Topic.Id</a></dd>
            <dt><i class="fa fa-eye"></i> Current</dt>
            <dd><a href="@Model.Topic.WebPath">View Page</a></dd>
          </dl>

        </div>
      </div>
    }

  </div>

</form>

@section scripts {
  <script>

    $(function () {

      /**
       * Trigger jQuery validation
       */
      $('#EditorForm').validate({
        ignore: [],
        invalidHandler: function () {
          setTimeout(function () {
            $('.nav-tabs a small.required').remove();
            $('.nav-tabs a.error').removeClass("error");
            $('.tab-content.tab-validate .tab-pane:has(input.error)').each(function () {
              var id = $(this).attr('id');
              $('.nav-tabs').find('a[href^="#' + id + '"]').addClass("error").append(' <small class="required">*</small>');
            });
          });
        }
      });

      /**
       * Sends AJAX request to Delete Action
       */
      $('#DeletePageButton').on('click', function(e) {
        e.preventDefault();
        var $this = $(this);
        if (confirm('Are you sure you want to delete the "@(Model.Topic.Title?.Replace("'", "&rsquo;")?? Model.Topic.Key)" topic? The topic and all descendants will be permanently deleted.')) {
          window.location.href = "@Url.Action("Delete", "Editor", new { path = Model.Topic.WebPath })";
        }
      });

    });

  </script>
}
