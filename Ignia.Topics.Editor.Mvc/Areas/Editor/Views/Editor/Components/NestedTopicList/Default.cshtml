@model NestedTopicListAttributeViewModel

@{
  Layout = "~/Areas/Editor/Views/Editor/Components/_Layout.cshtml";
}

<script type="text/javascript">
  var @($"{Model.AttributeDescriptor.Key}Tree");

  Ext.onReady(function(){
    var Tree            = Ext.tree;

  //track what nodes are moved
    var oldPosition     = null;
    var oldNextSibling  = null;
    var debugMessage    = "";

    @($"{Model.AttributeDescriptor.Key}Tree") = new Tree.TreePanel({
      useArrows                 : true,
      autoScroll                : true,
      animate                   : false,
      enableDD                  : true,
      containerScroll           : true,
      border                    : false,
      baseCls                   : 'TreeView',
      dataUrl                   : '/OnTopic/Json/@Model.WebPath/@Model.AttributeDescriptor.Key?ShowAll=true',
      root                      : new Ext.tree.AsyncTreeNode({}),
      rootVisible               : false,
      listeners                 : {
        click: function (n) {
          var targetUrl = "@(Url.Action("Edit")+Model.AttributeDescriptor.Key)/" + n.attributes.key;
          @if (Model.AttributeDescriptor.TargetPopup?? true) {
            <text>
              initEditorModal('@Model.Key', n.attributes.text, targetUrl + '?IsModal=true', @($"{Model.AttributeDescriptor.Key}Tree_refresh"));return false;
            </text>
          }
          else {
            <text>
              location.href = targetUrl;
            </text>
          }
        }
      }
    });

    @if (!Model.IsNew) {
      <text>
        @($"{Model.AttributeDescriptor.Key}Tree").render('@ViewData.TemplateInfo.GetFullHtmlFieldName("Container")');
      </text>
    }
  });

  function @($"{Model.AttributeDescriptor.Key}Tree")_refresh() {
    @($"{Model.AttributeDescriptor.Key}Tree").getLoader().load(@($"{Model.AttributeDescriptor.Key}Tree")).root;
    };

  </script>

<div id="@ViewData.TemplateInfo.GetFullHtmlFieldName("Container")"></div>

@if (!Model.IsNew) {
  var attributeDescriptor       = new TopicListAttributeTopicViewModel() {
    Key                         = Model.Key,
    EditorType                  = "TopicList.ascx",
    Scope                       = "Configuration:ContentTypes",
    AttributeName               = "ContentType",
    AttributeValue              = "ContentType",
    AllowedKeys                 = Model.AttributeDescriptor.ContentTypes,
    Label                       = "Add child topic…",
    TargetUrl                   = $"{Url.Action("Edit")}{Model.AttributeDescriptor.Key}/?ContentType={{Topic}}&IsNew=true&IsModal=true",
    TargetPopup                 = Model.AttributeDescriptor.TargetPopup,
    OnClientClose               = $"{Model.AttributeDescriptor.Key}Tree_refresh"
  };
  <text>
    <vc:topic-list
      attribute=@attributeDescriptor
      html-field-prefix=@ViewData.TemplateInfo.HtmlFieldPrefix>
    </vc:topic-list>
  </text>
}
else {
  <div class="alert alert-warning">
    Subtopics cannot be created until this topic has been saved. Save the topic, then add nested topics.
  </div>
}

<div id="@($"EditorModal_{Model.AttributeDescriptor.Key}")" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-header">
      <h1 id="@($"ModalTitle_{Model.AttributeDescriptor.Key}")" class="h3 Page-Title"><!-- determined by modal open script caller --></h1>
    </div>
    <div class="modal-content">
      <iframe id="@($"EditorFrame_{Model.AttributeDescriptor.Key}")" src="" width="100%" marginheight="0" frameborder="0">
        <!-- iframe source determined by modal open script caller -->
      </iframe>
    </div>
  </div>
</div>

<script>
  $(function() {
    $('[id^="EditorModal"]').on('hide.bs.modal', function (e) {
      @($"{Model.AttributeDescriptor.Key}Tree_refresh")();
    });
  });
</script>